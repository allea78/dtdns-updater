#!/bin/bash

# =================================================================
# dtdns-updater - Script to update dtdns hostname with current ip
# =================================================================
# @authors: 	Alle <alle@inventati.org>
#		Massimo Barbieri <massimo@fsfe.org>
#		(Add your name if you contribute)
# @Mantainer: Alle alle@inventati.org
# @copyright 2013 GNU GPLv3
# =================================================================
# This script is free software; you can redistribute it and/or
# modify it under the terms of the GNU GENERAL PUBLIC LICENSE
# License as published by the Free Software Foundation; either 
# version 3 of the License, or any later version.
# 
# You should have received a copy of the GNU General Public 
# License along with this library.
# If not, see <http://www.gnu.org/licenses/>.
###################################################################
# ERROR CODE
# # 0 = No error.
# # 1 = Unable to check my IP address
# #-1 = Error while updating dtdns record
# # 2 = IP already configured. No change is needed.


# Variables that you have to configure
HOST=hostname
DOMAIN=mydomain.com
PASSWD=password
#############################
# OTHER VARIABLES TO CONSIDER
TMPLOG="/tmp/dtdns-updater.tmp"
TAG="DTDNS-UPDATER"
CLIENT="Debian"


IPADDR=$(curl myip.dtdns.com)
VALIDATOR=$(echo $IPADDR | awk -F '.' '$1 < 255 && $2 < 255 && $3 < 255 && $4 < 255')

if [ -z "$VALIDATOR" ] ; then

	echo "Cannot check my ip at myip.dtdns.com"
	logger Cannot check my ip at myip.dtdns.com -t $TAG
	exit 1
fi

if [ -f "$TMPLOG" ]
then
	rm -rf $TMPLOG
fi

LASTIP=$(nslookup $HOST.$DOMAIN ns1.darktech.org | grep -A1 "$HOST" | grep Address | awk '{print $2 }')



if [ "$IPADDR" != "$LASTIP" ]; then
	echo -e "GET /api/autodns.cfm?id=$HOST&pw=$PASSWD&client=$CLIENT HTTP/1.1\nHost: www.dtdns.com\nUser-Agent: bash\n\n" | \
         nc www.dtdns.com 80 > $TMPLOG

	# VERIFY
	MSGDTDNS=$(tail -1 $TMPLOG)
	CHECKIP=$(tail -1 $TMPLOG | awk '{print $6}' | sed '$s/.$//')

	echo "$MSGDTDNS"
	logger $MSGDTDNS -t $TAG
	
	rm -rf $TMPLOG

	if  [ "$IPADDR" == "$CHECKIP" ]
	then
		exit 0
	else
		exit -1	
	fi
else
	echo "`date` - Your public ip is already configure on dtdns"
        logger "Your public ip is already configure on dtdns" -t $TAG	
	exit 2
fi


